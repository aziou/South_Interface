<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style TargetType="DataGrid">
        <!--网格线颜色-->
        <Setter Property="CanUserResizeColumns" Value="True"/>
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="#d6c79b" />
        <Setter Property="HorizontalGridLinesBrush">
            <Setter.Value>
                <SolidColorBrush Color="#d6c79b"/>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalGridLinesBrush">
            <Setter.Value>
                <SolidColorBrush Color="#d6c79b"/>
            </Setter.Value>
        </Setter>
    </Style>
    <!--<Style TargetType="DataGridColumnHeader">         <Setter Property="SnapsToDevicePixels" Value="True" />         <Setter Property="MinWidth" Value="0" />         <Setter Property="MinHeight" Value="28" />         <Setter Property="Foreground" Value="Black" />         <Setter Property="FontSize" Value="14" />         <Setter Property="Cursor" Value="Hand" />         <Setter Property="Template">             <Setter.Value>                 <ControlTemplate TargetType="DataGridColumnHeader">                       <Border x:Name="BackgroundBorder" BorderThickness="0,1,0,1"                               BorderBrush="#e6dbba"                                Width="Auto">                         <Grid >                             <Grid.ColumnDefinitions>                                 <ColumnDefinition Width="*" />                             </Grid.ColumnDefinitions>                             <ContentPresenter  Margin="0,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Center"/>                             <Rectangle Width="1" Fill="#d6c79b" HorizontalAlignment="Right" Grid.ColumnSpan="1" />                         </Grid>                     </Border>                                       </ControlTemplate>             </Setter.Value>         </Setter>         <Setter Property="Height" Value="25"/>     </Style>-->
    <Style TargetType="DataGridColumnHeader">
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="28" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Height" Value="25"/>
    </Style>
    <!--行样式触发-->
    <!--背景色改变必须先设置cellStyle 因为cellStyle会覆盖rowStyle样式-->
    <Style  TargetType="DataGridRow">
        <Setter Property="Background" Value="White" />
        <Setter Property="Height" Value="25"/>
        <Setter Property="Foreground" Value="Black" />
        <Style.Triggers>
            <!--隔行换色-->
            <Trigger Property="AlternationIndex" Value="0" >
                <Setter Property="Background" Value="#ecf6fc" />
            </Trigger>
            <!--<Trigger Property="AlternationIndex" Value="1" >                 <Setter Property="Background" Value="#ecf6fc" />             </Trigger>-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="LightGray"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="Background" Value="DodgerBlue"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--单元格样式触发-->
    <Style TargetType="DataGridCell">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <TextBlock TextAlignment="Center" VerticalAlignment="Center"  >                            <ContentPresenter /></TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="DodgerBlue"/>
                <!--<Setter Property="BorderBrush" Value="Red"/>-->
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
            <!--<Trigger Property="IsMouseOver" Value="True">                 <Setter Property="Background" Value="DodgerBlue"/>                 <Setter Property="BorderThickness" Value="0"/>                 <Setter Property="Foreground" Value="Black"/>             </Trigger>-->
        </Style.Triggers>
    </Style>


    <LinearGradientBrush x:Key="LinearGradientBlueBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF377FED" Offset="0" />
        <GradientStop Color="#FF074CC0" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="LinearGradientComBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#4169E1" Offset="0" />
        <GradientStop Color="#B0E2FF" Offset="1" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="MyBtnBorderColor" Color="#FF2D78F4"></SolidColorBrush>
    <SolidColorBrush x:Key="MyBtnHoverBackgroundColor" Color="#FF317EF3"></SolidColorBrush>
     
    <Style TargetType="{x:Type Button}" >
        <Setter Property="Background" Value="{StaticResource LinearGradientBlueBackground}"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="BorderBrush" Value="{StaticResource MyBtnBorderColor}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" 
                                SnapsToDevicePixels="true" CornerRadius="3,3,3,3">
                        <ContentPresenter x:Name="contentPresenter" 
                                              Focusable="False" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"  />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource MyBtnHoverBackgroundColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

   




</ResourceDictionary>